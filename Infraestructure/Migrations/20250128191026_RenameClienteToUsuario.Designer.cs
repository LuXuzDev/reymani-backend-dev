// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using reymani_web_api.Infraestructure.Data;

#nullable disable

namespace reymani_web_api.Infraestructure.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250128191026_RenameClienteToUsuario")]
    partial class RenameClienteToUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("reymani_web_api.Domain.Entities.CategoriaNegocio", b =>
                {
                    b.Property<Guid>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCategoria");

                    b.ToTable("CategoriasNegocios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.CategoriaProducto", b =>
                {
                    b.Property<Guid>("IdCategoriaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCategoriaProducto");

                    b.ToTable("CategoriasProducto");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.CostoEnvio", b =>
                {
                    b.Property<Guid>("IdCostoEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Costo")
                        .HasColumnType("numeric");

                    b.Property<int>("DistanciaMaxKm")
                        .HasColumnType("integer");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.HasKey("IdCostoEnvio");

                    b.HasIndex("IdNegocio");

                    b.ToTable("CostosEnvios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Direccion", b =>
                {
                    b.Property<Guid>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("DireccionEntidad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("IdEntidad")
                        .HasColumnType("uuid");

                    b.Property<double>("Latitud")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitud")
                        .HasColumnType("double precision");

                    b.Property<string>("Municipio")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoEntidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdDireccion");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.EstadoPedido", b =>
                {
                    b.Property<Guid>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<Guid>("IdPlantillaNotificacion")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TiempoDuracionEstimado")
                        .HasColumnType("integer");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadosPedido");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.HistorialEstadoPedido", b =>
                {
                    b.Property<Guid>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdEstadoPedido")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdPedido")
                        .HasColumnType("uuid");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdEstadoPedido");

                    b.HasIndex("IdPedido");

                    b.ToTable("HistorialEstadosPedido");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.HorarioNegocio", b =>
                {
                    b.Property<Guid>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Dia")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("HoraApertura")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HoraCierre")
                        .HasColumnType("interval");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.HasKey("IdHorario");

                    b.HasIndex("IdNegocio");

                    b.ToTable("HorariosNegocios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Imagen", b =>
                {
                    b.Property<Guid>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("IdEntidad")
                        .HasColumnType("uuid");

                    b.Property<string>("TipoEntidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdImagen");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Mensajero", b =>
                {
                    b.Property<Guid>("IdMensajero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Vehiculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdMensajero");

                    b.ToTable("Mensajeros");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.MensajeroNegocio", b =>
                {
                    b.Property<Guid>("IdMensajeroNegocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaAsociacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdMensajero")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.HasKey("IdMensajeroNegocio");

                    b.HasIndex("IdMensajero");

                    b.HasIndex("IdNegocio");

                    b.ToTable("MensajeroNegocios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.MetodoPago", b =>
                {
                    b.Property<Guid>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Dato1")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Dato2")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Dato3")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdEntidad")
                        .HasColumnType("uuid");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoEntidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdMetodoPago");

                    b.ToTable("MetodosPago");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Negocio", b =>
                {
                    b.Property<Guid>("IdNegocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("EntregaDomicilio")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("URLImagenBanner")
                        .HasColumnType("text");

                    b.Property<string>("URLImagenLogo")
                        .HasColumnType("text");

                    b.Property<string>("URLImagenPrincipal")
                        .HasColumnType("text");

                    b.HasKey("IdNegocio");

                    b.ToTable("Negocios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.NegocioCategoria", b =>
                {
                    b.Property<Guid>("IdNegocioCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdCategoria")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.HasKey("IdNegocioCategoria");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdNegocio");

                    b.ToTable("NegocioCategorias");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.NegocioUsuario", b =>
                {
                    b.Property<Guid>("IdNegocioUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("IdNegocioUsuario");

                    b.HasIndex("IdNegocio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("NegociosUsuarios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Notificacion", b =>
                {
                    b.Property<Guid>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdPedido")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdPlantilla")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("NegocioIdNegocio")
                        .HasColumnType("uuid");

                    b.HasKey("IdNotificacion");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdPlantilla");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("NegocioIdNegocio");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ConfirmacionPago")
                        .HasColumnType("boolean");

                    b.Property<double>("CostoEnvio")
                        .HasColumnType("double precision");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("DescripcionDescuento")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double>("Descuento")
                        .HasColumnType("double precision");

                    b.Property<Guid>("DireccionEntrega")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DireccionIdDireccion")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EstadoPedidoIdEstado")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdEstado")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdMensajero")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdMetodoPago")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MensajeroIdMensajero")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MetodoPagoIdMetodoPago")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("NegocioIdNegocio")
                        .HasColumnType("uuid");

                    b.Property<double>("SubtotalProductos")
                        .HasColumnType("double precision");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.Property<int>("Valoracion")
                        .HasColumnType("integer");

                    b.Property<bool>("cerrado")
                        .HasColumnType("boolean");

                    b.HasKey("IdPedido");

                    b.HasIndex("DireccionIdDireccion");

                    b.HasIndex("EstadoPedidoIdEstado");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("MensajeroIdMensajero");

                    b.HasIndex("MetodoPagoIdMetodoPago");

                    b.HasIndex("NegocioIdNegocio");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.PedidoProducto", b =>
                {
                    b.Property<Guid>("IdPedidoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<Guid>("IdPedido")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdProducto")
                        .HasColumnType("uuid");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProductoIdProducto")
                        .HasColumnType("uuid");

                    b.Property<double>("Subtotal")
                        .HasColumnType("double precision");

                    b.HasKey("IdPedidoProducto");

                    b.HasIndex("IdPedido");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("PedidosProductos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Permiso", b =>
                {
                    b.Property<Guid>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.PlantillaNotificacion", b =>
                {
                    b.Property<Guid>("IdPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdEstadoPedido")
                        .HasColumnType("uuid");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdPlantilla");

                    b.HasIndex("IdEstadoPedido")
                        .IsUnique();

                    b.ToTable("PlantillasNotificacion");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Producto", b =>
                {
                    b.Property<Guid>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<Guid>("IdNegocio")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.Property<double>("Stock")
                        .HasColumnType("double precision");

                    b.Property<double>("StockCongelado")
                        .HasColumnType("double precision");

                    b.Property<string>("URLImagen")
                        .HasColumnType("text");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdNegocio");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.ProductoCategoria", b =>
                {
                    b.Property<Guid>("IdProductoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdCategoriaProducto")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdProducto")
                        .HasColumnType("uuid");

                    b.HasKey("IdProductoCategoria");

                    b.HasIndex("IdCategoriaProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProductosCategorias");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Rol", b =>
                {
                    b.Property<Guid>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.RolPermiso", b =>
                {
                    b.Property<Guid>("IdRolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdPermiso")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uuid");

                    b.HasKey("IdRolPermiso");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRol");

                    b.ToTable("RolesPermisos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Telefono", b =>
                {
                    b.Property<Guid>("IdTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("IdEntidad")
                        .HasColumnType("uuid");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoEntidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdTelefono");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NumeroCarnet")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<Guid>("IdUsuarioRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdRol")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuariosRoles");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.CostoEnvio", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany("CostosEnvio")
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Negocio");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.HistorialEstadoPedido", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.EstadoPedido", "EstadoPedido")
                        .WithMany("HistorialEstadosPedido")
                        .HasForeignKey("IdEstadoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Pedido", "Pedido")
                        .WithMany("HistorialEstadosPedido")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPedido");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.HorarioNegocio", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany("Horarios")
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Negocio");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.MensajeroNegocio", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Mensajero", "Mensajero")
                        .WithMany("MensajerosNegocios")
                        .HasForeignKey("IdMensajero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany("MensajerosNegocio")
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mensajero");

                    b.Navigation("Negocio");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.NegocioCategoria", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.CategoriaNegocio", "Categoria")
                        .WithMany("NegociosCategorias")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany("NegocioCategorias")
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Negocio");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.NegocioUsuario", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Negocios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Negocio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Notificacion", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.PlantillaNotificacion", "PlantillaNotificacion")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdPlantilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany()
                        .HasForeignKey("NegocioIdNegocio");

                    b.Navigation("Negocio");

                    b.Navigation("Pedido");

                    b.Navigation("PlantillaNotificacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionIdDireccion");

                    b.HasOne("reymani_web_api.Domain.Entities.EstadoPedido", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadoPedidoIdEstado");

                    b.HasOne("reymani_web_api.Domain.Entities.EstadoPedido", "EstadoPedido")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Mensajero", "Mensajero")
                        .WithMany("Pedidos")
                        .HasForeignKey("MensajeroIdMensajero");

                    b.HasOne("reymani_web_api.Domain.Entities.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("MetodoPagoIdMetodoPago");

                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany()
                        .HasForeignKey("NegocioIdNegocio");

                    b.Navigation("Direccion");

                    b.Navigation("EstadoPedido");

                    b.Navigation("Mensajero");

                    b.Navigation("MetodoPago");

                    b.Navigation("Negocio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.PedidoProducto", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Pedido", "Pedido")
                        .WithMany("PedidoProductos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoIdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.PlantillaNotificacion", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.EstadoPedido", "EstadoPedido")
                        .WithOne("PlantillaNotificacion")
                        .HasForeignKey("reymani_web_api.Domain.Entities.PlantillaNotificacion", "IdEstadoPedido")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("EstadoPedido");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Producto", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Negocio", "Negocio")
                        .WithMany("Productos")
                        .HasForeignKey("IdNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Negocio");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.ProductoCategoria", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.CategoriaProducto", "CategoriaProducto")
                        .WithMany("ProductosCategorias")
                        .HasForeignKey("IdCategoriaProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Producto", "Producto")
                        .WithMany("ProductosCategorias")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaProducto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.RolPermiso", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Rol", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("reymani_web_api.Domain.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("reymani_web_api.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.CategoriaNegocio", b =>
                {
                    b.Navigation("NegociosCategorias");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.CategoriaProducto", b =>
                {
                    b.Navigation("ProductosCategorias");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.EstadoPedido", b =>
                {
                    b.Navigation("HistorialEstadosPedido");

                    b.Navigation("Pedidos");

                    b.Navigation("PlantillaNotificacion");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Mensajero", b =>
                {
                    b.Navigation("MensajerosNegocios");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Negocio", b =>
                {
                    b.Navigation("CostosEnvio");

                    b.Navigation("Horarios");

                    b.Navigation("MensajerosNegocio");

                    b.Navigation("NegocioCategorias");

                    b.Navigation("Productos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("HistorialEstadosPedido");

                    b.Navigation("Notificaciones");

                    b.Navigation("PedidoProductos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.PlantillaNotificacion", b =>
                {
                    b.Navigation("Notificaciones");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Producto", b =>
                {
                    b.Navigation("ProductosCategorias");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Permisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("reymani_web_api.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Negocios");

                    b.Navigation("Notificaciones");

                    b.Navigation("Pedidos");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
